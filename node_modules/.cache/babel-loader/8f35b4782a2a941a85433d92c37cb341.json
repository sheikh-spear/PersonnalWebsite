{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sheikh-spear/Cybreach/Portfolio/src/components/Home/Globe.js\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\nexport default class Globe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rotation: 0\n    };\n  }\n\n  render() {\n    let projection = d3.geoOrthographic().fitSize([this.props.size, this.props.size], this.props.geoJson).rotate([this.state.rotation]);\n    let geoGenerator = d3.geoPath().projection(projection);\n    let pathString = geoGenerator(this.props.geoJson);\n    window.requestAnimationFrame(() => {\n      this.setState({\n        rotation: this.state.rotation + 0.2\n      });\n    });\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: this.props.size,\n      height: this.props.size,\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: pathString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/sheikh-spear/Cybreach/Portfolio/src/components/Home/Globe.js"],"names":["React","d3","Globe","Component","constructor","props","state","rotation","render","projection","geoOrthographic","fitSize","size","geoJson","rotate","geoGenerator","geoPath","pathString","window","requestAnimationFrame","setState"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAEA,eAAe,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,UAAU,GAAGR,EAAE,CAACS,eAAH,GACdC,OADc,CACN,CAAC,KAAKN,KAAL,CAAWO,IAAZ,EAAkB,KAAKP,KAAL,CAAWO,IAA7B,CADM,EAC8B,KAAKP,KAAL,CAAWQ,OADzC,EAEdC,MAFc,CAEP,CAAC,KAAKR,KAAL,CAAWC,QAAZ,CAFO,CAAjB;AAIA,QAAIQ,YAAY,GAAGd,EAAE,CAACe,OAAH,GAChBP,UADgB,CACLA,UADK,CAAnB;AAGA,QAAIQ,UAAU,GAAGF,YAAY,CAAC,KAAKV,KAAL,CAAWQ,OAAZ,CAA7B;AAEAK,IAAAA,MAAM,CAACC,qBAAP,CAA6B,MAAM;AACjC,WAAKC,QAAL,CAAc;AACZb,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,GAAsB;AADpB,OAAd;AAGD,KAJD;AAMA,wBAAO;AAAK,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWO,IAAvB;AAA6B,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWO,IAAhD;AAAA,6BACL;AAAM,QAAA,CAAC,EAAEK;AAAT;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AA5B8C","sourcesContent":["import React from \"react\";\nimport * as d3 from \"d3\";\n\nexport default class Globe extends React.Component {\n    constructor(props) {\n      super(props)\n      \n      this.state = {\n        rotation: 0\n      }\n    }\n    \n    render() {\n      let projection = d3.geoOrthographic()\n        .fitSize([this.props.size, this.props.size], this.props.geoJson)\n        .rotate([this.state.rotation])\n      \n      let geoGenerator = d3.geoPath()\n        .projection(projection)\n      \n      let pathString = geoGenerator(this.props.geoJson)\n  \n      window.requestAnimationFrame(() => {\n        this.setState({\n          rotation: this.state.rotation + 0.2\n        })\n      })\n      \n      return <svg width={this.props.size} height={this.props.size} >\n        <path d={pathString} />\n      </svg>\n    }\n}"]},"metadata":{},"sourceType":"module"}